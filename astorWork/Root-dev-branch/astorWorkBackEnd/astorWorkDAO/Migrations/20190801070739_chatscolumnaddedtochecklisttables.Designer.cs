// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using astorWorkDAO;

namespace astorWorkDAO.Migrations
{
    [DbContext(typeof(astorWorkDbContext))]
    [Migration("20190801070739_chatscolumnaddedtochecklisttables")]
    partial class chatscolumnaddedtochecklisttables
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("astorWorkDAO.AttachmentMaster", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedByID");

                    b.Property<DateTimeOffset>("CreatedDate");

                    b.Property<string>("FileName");

                    b.Property<int>("FileSize");

                    b.Property<string>("Reference");

                    b.Property<string>("Remarks");

                    b.Property<int>("Type");

                    b.Property<string>("URL");

                    b.Property<int?>("UpdatedByID");

                    b.Property<DateTimeOffset?>("UpdatedDate");

                    b.HasKey("ID");

                    b.HasIndex("CreatedByID");

                    b.HasIndex("UpdatedByID");

                    b.ToTable("AttachmentMaster");
                });

            modelBuilder.Entity("astorWorkDAO.BIMForgeElement", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DbID");

                    b.Property<int>("ForgeModelID");

                    b.Property<int>("MaterialMasterID");

                    b.HasKey("ID");

                    b.HasIndex("ForgeModelID");

                    b.HasIndex("MaterialMasterID");

                    b.ToTable("BIMForgeElement");
                });

            modelBuilder.Entity("astorWorkDAO.BIMForgeModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BucketKey");

                    b.Property<string>("Location");

                    b.Property<string>("ObjectID");

                    b.Property<string>("ObjectKey");

                    b.Property<string>("Sha1");

                    b.Property<int>("Size");

                    b.HasKey("ID");

                    b.ToTable("BIMForgeModel");
                });

            modelBuilder.Entity("astorWorkDAO.BIMSyncAudit", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BIMModelId")
                        .IsRequired();

                    b.Property<string>("BIMVideoUrl");

                    b.Property<int>("ProjectID");

                    b.Property<DateTimeOffset>("SyncTime");

                    b.Property<int>("SyncedByID");

                    b.Property<string>("SyncedMaterialIds");

                    b.Property<string>("UnsyncedMaterialIds");

                    b.HasKey("ID");

                    b.HasIndex("ProjectID");

                    b.HasIndex("SyncedByID");

                    b.ToTable("BIMSyncAudit");
                });

            modelBuilder.Entity("astorWorkDAO.ChatData", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Attachment");

                    b.Property<int?>("ChecklistAuditID");

                    b.Property<int?>("ChecklistID");

                    b.Property<int?>("ChecklistItemAuditID");

                    b.Property<int?>("ChecklistItemID");

                    b.Property<bool>("HasAttachment");

                    b.Property<bool>("IsSystem");

                    b.Property<int?>("JobScheduleID");

                    b.Property<int?>("MaterialStageAuditID");

                    b.Property<string>("Message");

                    b.Property<DateTime>("TimeStamp");

                    b.Property<int>("UserID");

                    b.HasKey("ID");

                    b.HasIndex("ChecklistAuditID");

                    b.HasIndex("ChecklistID");

                    b.HasIndex("ChecklistItemAuditID");

                    b.HasIndex("ChecklistItemID");

                    b.HasIndex("JobScheduleID");

                    b.HasIndex("MaterialStageAuditID");

                    b.HasIndex("UserID");

                    b.ToTable("ChatData");
                });

            modelBuilder.Entity("astorWorkDAO.ChatUserAssociation", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ChatID");

                    b.Property<DateTime>("SeenDateTime");

                    b.Property<int?>("UserMasterID");

                    b.HasKey("ID");

                    b.HasIndex("ChatID");

                    b.HasIndex("UserMasterID");

                    b.ToTable("ChatUserAssociation");
                });

            modelBuilder.Entity("astorWorkDAO.ChecklistAudit", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ChecklistID");

                    b.Property<int?>("CreatedByID");

                    b.Property<DateTimeOffset?>("CreatedDate");

                    b.Property<int?>("JobScheduleID");

                    b.Property<int?>("MaterialStageAuditID");

                    b.Property<int?>("RouteToID");

                    b.Property<string>("SignatureURL");

                    b.Property<int>("Status");

                    b.HasKey("ID");

                    b.HasIndex("ChecklistID");

                    b.HasIndex("CreatedByID");

                    b.HasIndex("JobScheduleID");

                    b.HasIndex("MaterialStageAuditID");

                    b.HasIndex("RouteToID");

                    b.ToTable("ChecklistAudit");
                });

            modelBuilder.Entity("astorWorkDAO.ChecklistItemAssociation", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ChecklistID");

                    b.Property<int>("ChecklistItemID");

                    b.Property<int>("ChecklistItemSequence");

                    b.HasKey("ID");

                    b.HasIndex("ChecklistID");

                    b.HasIndex("ChecklistItemID");

                    b.ToTable("ChecklistItemAssociation");
                });

            modelBuilder.Entity("astorWorkDAO.ChecklistItemAudit", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ChecklistAuditID");

                    b.Property<int>("ChecklistItemID");

                    b.Property<int?>("CreatedByID");

                    b.Property<DateTimeOffset>("CreatedDate");

                    b.Property<int>("Status");

                    b.HasKey("ID");

                    b.HasIndex("ChecklistAuditID");

                    b.HasIndex("ChecklistItemID");

                    b.HasIndex("CreatedByID");

                    b.ToTable("ChecklistItemAudit");
                });

            modelBuilder.Entity("astorWorkDAO.ChecklistItemMaster", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<string>("TimeFrame");

                    b.Property<int>("Type");

                    b.HasKey("ID");

                    b.ToTable("ChecklistItemMaster");
                });

            modelBuilder.Entity("astorWorkDAO.ChecklistMaster", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("MaterialStageID");

                    b.Property<string>("Name");

                    b.Property<int>("Sequence");

                    b.Property<int?>("TradeID");

                    b.HasKey("ID");

                    b.HasIndex("MaterialStageID");

                    b.HasIndex("TradeID");

                    b.ToTable("ChecklistMaster");
                });

            modelBuilder.Entity("astorWorkDAO.InventoryAudit", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTimeOffset?>("CastingDate");

                    b.Property<int?>("CreatedByID");

                    b.Property<DateTimeOffset?>("CreatedDate");

                    b.Property<string>("MarkingNo");

                    b.Property<int?>("OrganisationID");

                    b.Property<int?>("ProjectID");

                    b.Property<int>("SN");

                    b.Property<int?>("TrackerID");

                    b.HasKey("ID");

                    b.HasIndex("CreatedByID");

                    b.HasIndex("OrganisationID");

                    b.HasIndex("ProjectID");

                    b.HasIndex("TrackerID");

                    b.ToTable("InventoryAudit");
                });

            modelBuilder.Entity("astorWorkDAO.JobAudit", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedByID");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<int?>("JobScheduleID");

                    b.Property<int>("Status");

                    b.HasKey("ID");

                    b.HasIndex("CreatedByID");

                    b.HasIndex("JobScheduleID");

                    b.ToTable("JobAudit");
                });

            modelBuilder.Entity("astorWorkDAO.JobSchedule", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTimeOffset?>("ActualEndDate");

                    b.Property<DateTimeOffset?>("ActualStartDate");

                    b.Property<int>("MaterialID");

                    b.Property<DateTimeOffset?>("PlannedEndDate");

                    b.Property<DateTimeOffset?>("PlannedStartDate");

                    b.Property<int>("Status");

                    b.Property<int?>("SubconID");

                    b.Property<int>("TradeID");

                    b.HasKey("ID");

                    b.HasIndex("MaterialID");

                    b.HasIndex("SubconID");

                    b.HasIndex("TradeID");

                    b.ToTable("JobSchedule");
                });

            modelBuilder.Entity("astorWorkDAO.LocationMaster", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<int?>("OrganisationID");

                    b.Property<int?>("SiteID");

                    b.Property<int>("Type");

                    b.HasKey("ID");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("OrganisationID");

                    b.HasIndex("SiteID");

                    b.ToTable("LocationMaster");
                });

            modelBuilder.Entity("astorWorkDAO.MRFMaster", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedByID");

                    b.Property<DateTimeOffset>("CreatedDate");

                    b.Property<DateTimeOffset>("ExpectedDeliveryDate");

                    b.Property<double>("MRFCompletion");

                    b.Property<string>("MRFNo");

                    b.Property<DateTimeOffset>("OrderDate");

                    b.Property<DateTimeOffset?>("PlannedCastingDate");

                    b.Property<string>("Remarks");

                    b.Property<int?>("UpdatedByID");

                    b.Property<DateTimeOffset>("UpdatedDate");

                    b.HasKey("ID");

                    b.HasIndex("CreatedByID");

                    b.HasIndex("UpdatedByID");

                    b.ToTable("MRFMaster");
                });

            modelBuilder.Entity("astorWorkDAO.MaterialDrawingAssociation", b =>
                {
                    b.Property<int>("MaterialID");

                    b.Property<int>("DrawingID");

                    b.HasKey("MaterialID", "DrawingID");

                    b.HasIndex("DrawingID");

                    b.ToTable("MaterialDrawingAssociation");
                });

            modelBuilder.Entity("astorWorkDAO.MaterialDrawingAudit", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTimeOffset>("DrawingIssueDate");

                    b.Property<string>("DrawingNo");

                    b.Property<int>("RevisionNo");

                    b.HasKey("ID");

                    b.ToTable("MaterialDrawingAudit");
                });

            modelBuilder.Entity("astorWorkDAO.MaterialInfoAudit", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedByID");

                    b.Property<DateTimeOffset>("CreatedDate");

                    b.Property<DateTimeOffset>("ExpectedDeliveryDate");

                    b.Property<int?>("MaterialID");

                    b.Property<string>("Remarks");

                    b.Property<int?>("UpdatedByID");

                    b.Property<DateTimeOffset>("UpdatedDate");

                    b.HasKey("ID");

                    b.HasIndex("CreatedByID");

                    b.HasIndex("MaterialID");

                    b.HasIndex("UpdatedByID");

                    b.ToTable("MaterialInfoAudit");
                });

            modelBuilder.Entity("astorWorkDAO.MaterialMaster", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AssemblyLocation");

                    b.Property<string>("Block")
                        .IsRequired();

                    b.Property<DateTimeOffset>("CastingDate");

                    b.Property<string>("Level")
                        .IsRequired();

                    b.Property<int?>("MRFID");

                    b.Property<string>("MarkingNo")
                        .IsRequired();

                    b.Property<int>("MaterialTypeID");

                    b.Property<int>("OrganisationID");

                    b.Property<int>("ProjectID");

                    b.Property<int>("SN");

                    b.Property<string>("Zone")
                        .IsRequired();

                    b.HasKey("ID");

                    b.HasIndex("MRFID");

                    b.HasIndex("MaterialTypeID");

                    b.HasIndex("OrganisationID");

                    b.HasIndex("ProjectID", "MarkingNo", "Block", "Level", "Zone")
                        .IsUnique();

                    b.ToTable("MaterialMaster");
                });

            modelBuilder.Entity("astorWorkDAO.MaterialQCCase", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CaseName");

                    b.Property<int?>("CreatedById");

                    b.Property<DateTimeOffset>("CreatedDate");

                    b.Property<int>("MaterialMasterId");

                    b.Property<int?>("UpdatedById");

                    b.Property<DateTimeOffset?>("UpdatedDate");

                    b.HasKey("ID");

                    b.HasIndex("CreatedById");

                    b.HasIndex("MaterialMasterId");

                    b.HasIndex("UpdatedById");

                    b.ToTable("MaterialQCCase");
                });

            modelBuilder.Entity("astorWorkDAO.MaterialQCDefect", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedByID");

                    b.Property<DateTimeOffset>("CreatedDate");

                    b.Property<int?>("OrganisationID");

                    b.Property<int>("QCCaseID");

                    b.Property<string>("Remarks");

                    b.Property<int>("Status");

                    b.Property<int?>("UpdatedByID");

                    b.Property<DateTimeOffset?>("UpdatedDate");

                    b.HasKey("ID");

                    b.HasIndex("CreatedByID");

                    b.HasIndex("OrganisationID");

                    b.HasIndex("QCCaseID");

                    b.HasIndex("UpdatedByID");

                    b.ToTable("MaterialQCDefect");
                });

            modelBuilder.Entity("astorWorkDAO.MaterialQCPhotos", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CreatedById");

                    b.Property<DateTimeOffset>("CreatedDate");

                    b.Property<int?>("MaterialQCDefectID");

                    b.Property<string>("Remarks");

                    b.Property<int>("Status");

                    b.Property<string>("URL");

                    b.HasKey("ID");

                    b.HasIndex("CreatedById");

                    b.HasIndex("MaterialQCDefectID");

                    b.ToTable("MaterialQCPhotos");
                });

            modelBuilder.Entity("astorWorkDAO.MaterialStageAudit", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedByID");

                    b.Property<DateTimeOffset>("CreatedDate");

                    b.Property<int>("LocationID");

                    b.Property<int>("MaterialMasterID");

                    b.Property<int>("QCStatus");

                    b.Property<string>("Remarks");

                    b.Property<int>("StageID");

                    b.HasKey("ID");

                    b.HasIndex("CreatedByID");

                    b.HasIndex("LocationID");

                    b.HasIndex("MaterialMasterID");

                    b.HasIndex("StageID");

                    b.ToTable("MaterialStageAudit");
                });

            modelBuilder.Entity("astorWorkDAO.MaterialStageMaster", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("CanIgnoreQC");

                    b.Property<string>("Colour")
                        .IsRequired();

                    b.Property<bool>("IsEditable");

                    b.Property<string>("MaterialTypes");

                    b.Property<int>("MilestoneId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<int>("Order");

                    b.HasKey("ID");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("MaterialStageMaster");
                });

            modelBuilder.Entity("astorWorkDAO.MaterialTypeMaster", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<string>("RouteTo");

                    b.HasKey("ID");

                    b.ToTable("MaterialTypeMaster");
                });

            modelBuilder.Entity("astorWorkDAO.ModuleMaster", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<int?>("ParentModuleID");

                    b.Property<string>("UrlPrefix")
                        .IsRequired();

                    b.HasKey("ID");

                    b.HasIndex("ParentModuleID");

                    b.HasIndex("UrlPrefix")
                        .IsUnique();

                    b.ToTable("ModuleMaster");
                });

            modelBuilder.Entity("astorWorkDAO.NotificationAudit", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Code");

                    b.Property<DateTimeOffset>("CreatedDate");

                    b.Property<int?>("NotificationTimerID");

                    b.Property<DateTimeOffset?>("ProcessedDate");

                    b.Property<string>("Reference");

                    b.Property<int>("Type");

                    b.HasKey("ID");

                    b.HasIndex("NotificationTimerID");

                    b.ToTable("NotificationAudit");
                });

            modelBuilder.Entity("astorWorkDAO.NotificationTimerMaster", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Code");

                    b.Property<bool>("Enabled");

                    b.Property<int?>("ProjectID");

                    b.Property<int?>("SiteID");

                    b.Property<int>("TriggerTime");

                    b.Property<bool>("UpdateRequired");

                    b.HasKey("ID");

                    b.HasIndex("ProjectID");

                    b.HasIndex("SiteID");

                    b.ToTable("NotificationTimerMaster");
                });

            modelBuilder.Entity("astorWorkDAO.OrganisationMaster", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CycleDays")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(7);

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<int>("OrganisationType");

                    b.HasKey("ID");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("OrganisationMaster");
                });

            modelBuilder.Entity("astorWorkDAO.PageMaster", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ModuleMasterID");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("UrlPath")
                        .IsRequired();

                    b.HasKey("ID");

                    b.HasIndex("ModuleMasterID");

                    b.ToTable("PageMaster");
                });

            modelBuilder.Entity("astorWorkDAO.ProjectMaster", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Country");

                    b.Property<string>("Description");

                    b.Property<DateTimeOffset?>("EstimatedEndDate");

                    b.Property<DateTimeOffset?>("EstimatedStartDate");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<int>("TimeZoneOffset");

                    b.HasKey("ID");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("ProjectMaster");
                });

            modelBuilder.Entity("astorWorkDAO.RoleMaster", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DefaultPageID");

                    b.Property<bool>("IsEditable");

                    b.Property<int>("MobileEntryPoint");

                    b.Property<string>("Name");

                    b.Property<string>("PlatformCode");

                    b.HasKey("ID");

                    b.HasIndex("DefaultPageID");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("RoleMaster");
                });

            modelBuilder.Entity("astorWorkDAO.RolePageAssociation", b =>
                {
                    b.Property<int>("RoleId");

                    b.Property<int>("PageId");

                    b.Property<int>("AccessLevel");

                    b.HasKey("RoleId", "PageId");

                    b.HasIndex("PageId");

                    b.ToTable("RolePageAssociation");
                });

            modelBuilder.Entity("astorWorkDAO.RolePowerBIReport", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PowerBIReportId");

                    b.Property<int>("RoleId");

                    b.HasKey("ID");

                    b.HasIndex("RoleId");

                    b.ToTable("RolePowerBIReport");
                });

            modelBuilder.Entity("astorWorkDAO.SiteMaster", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Country");

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.Property<int?>("OrganisationID");

                    b.Property<int>("TimeZoneOffset");

                    b.HasKey("ID");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasFilter("[Name] IS NOT NULL");

                    b.HasIndex("OrganisationID");

                    b.ToTable("SiteMaster");
                });

            modelBuilder.Entity("astorWorkDAO.SystemHealthMaster", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTimeOffset>("LastUpdated");

                    b.Property<string>("Message");

                    b.Property<string>("Reference");

                    b.Property<int>("Status");

                    b.Property<int>("Type");

                    b.HasKey("ID");

                    b.ToTable("SystemHealthMaster");
                });

            modelBuilder.Entity("astorWorkDAO.TrackerMaster", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BatchNumber");

                    b.Property<string>("Label");

                    b.Property<int?>("MaterialID");

                    b.Property<string>("Tag")
                        .IsRequired();

                    b.Property<string>("Type")
                        .IsRequired();

                    b.HasKey("ID");

                    b.HasIndex("MaterialID");

                    b.HasIndex("Tag")
                        .IsUnique();

                    b.ToTable("TrackerMaster");
                });

            modelBuilder.Entity("astorWorkDAO.TradeMaster", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<string>("RouteTo");

                    b.HasKey("ID");

                    b.ToTable("TradeMaster");
                });

            modelBuilder.Entity("astorWorkDAO.TradeMaterialTypeAssociation", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MaterialTypeID");

                    b.Property<int>("TradeID");

                    b.HasKey("ID");

                    b.HasIndex("MaterialTypeID");

                    b.HasIndex("TradeID");

                    b.ToTable("TradeMaterialTypeAssociation");
                });

            modelBuilder.Entity("astorWorkDAO.UserMRFAssociation", b =>
                {
                    b.Property<int>("UserID");

                    b.Property<int>("MRFID");

                    b.HasKey("UserID", "MRFID");

                    b.HasIndex("MRFID");

                    b.ToTable("UserMRFAssociation");
                });

            modelBuilder.Entity("astorWorkDAO.UserMaster", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email");

                    b.Property<bool>("IsActive");

                    b.Property<DateTimeOffset?>("LastLogin");

                    b.Property<int?>("OrganisationID");

                    b.Property<string>("Password");

                    b.Property<string>("PersonName")
                        .IsRequired();

                    b.Property<int?>("ProjectID");

                    b.Property<int>("RoleID");

                    b.Property<string>("Salt");

                    b.Property<int?>("SiteID");

                    b.Property<string>("UserName")
                        .IsRequired();

                    b.HasKey("ID");

                    b.HasIndex("OrganisationID");

                    b.HasIndex("ProjectID");

                    b.HasIndex("RoleID");

                    b.HasIndex("SiteID");

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.ToTable("UserMaster");
                });

            modelBuilder.Entity("astorWorkDAO.UserNotificationAssociation", b =>
                {
                    b.Property<int>("UserID");

                    b.Property<int>("NotificationID");

                    b.Property<int>("ID");

                    b.HasKey("UserID", "NotificationID");

                    b.HasIndex("NotificationID");

                    b.ToTable("UserNotificationAssociation");
                });

            modelBuilder.Entity("astorWorkDAO.UserRequestAudit", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("RequestSuccess");

                    b.Property<DateTimeOffset>("RequestTime");

                    b.Property<int>("RequestType");

                    b.Property<int>("UserID");

                    b.HasKey("ID");

                    b.HasIndex("UserID");

                    b.ToTable("UserRequestAudit");
                });

            modelBuilder.Entity("astorWorkDAO.UserSessionAudit", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccessToken")
                        .IsRequired();

                    b.Property<DateTimeOffset>("CreatedTime");

                    b.Property<int>("ExpireIn");

                    b.Property<string>("RefreshToken")
                        .IsRequired();

                    b.Property<int?>("UserMasterID");

                    b.HasKey("ID");

                    b.HasIndex("UserMasterID");

                    b.ToTable("UserSessionAudit");
                });

            modelBuilder.Entity("astorWorkDAO.AttachmentMaster", b =>
                {
                    b.HasOne("astorWorkDAO.UserMaster", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedByID");

                    b.HasOne("astorWorkDAO.UserMaster", "UpdatedBy")
                        .WithMany()
                        .HasForeignKey("UpdatedByID");
                });

            modelBuilder.Entity("astorWorkDAO.BIMForgeElement", b =>
                {
                    b.HasOne("astorWorkDAO.BIMForgeModel", "ForgeModel")
                        .WithMany("Elements")
                        .HasForeignKey("ForgeModelID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("astorWorkDAO.MaterialMaster", "MaterialMaster")
                        .WithMany("Elements")
                        .HasForeignKey("MaterialMasterID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("astorWorkDAO.BIMSyncAudit", b =>
                {
                    b.HasOne("astorWorkDAO.ProjectMaster", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("astorWorkDAO.UserMaster", "SyncedBy")
                        .WithMany("UserBIMAudits")
                        .HasForeignKey("SyncedByID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("astorWorkDAO.ChatData", b =>
                {
                    b.HasOne("astorWorkDAO.ChecklistAudit")
                        .WithMany("Chats")
                        .HasForeignKey("ChecklistAuditID");

                    b.HasOne("astorWorkDAO.ChecklistMaster", "Checklist")
                        .WithMany()
                        .HasForeignKey("ChecklistID");

                    b.HasOne("astorWorkDAO.ChecklistItemAudit")
                        .WithMany("Chats")
                        .HasForeignKey("ChecklistItemAuditID");

                    b.HasOne("astorWorkDAO.ChecklistItemMaster", "ChecklistItem")
                        .WithMany()
                        .HasForeignKey("ChecklistItemID");

                    b.HasOne("astorWorkDAO.JobSchedule", "JobSchedule")
                        .WithMany()
                        .HasForeignKey("JobScheduleID");

                    b.HasOne("astorWorkDAO.MaterialStageAudit", "MaterialStageAudit")
                        .WithMany()
                        .HasForeignKey("MaterialStageAuditID");

                    b.HasOne("astorWorkDAO.UserMaster", "User")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("astorWorkDAO.ChatUserAssociation", b =>
                {
                    b.HasOne("astorWorkDAO.ChatData", "Chat")
                        .WithMany("SeenBy")
                        .HasForeignKey("ChatID");

                    b.HasOne("astorWorkDAO.UserMaster", "UserMaster")
                        .WithMany()
                        .HasForeignKey("UserMasterID");
                });

            modelBuilder.Entity("astorWorkDAO.ChecklistAudit", b =>
                {
                    b.HasOne("astorWorkDAO.ChecklistMaster", "Checklist")
                        .WithMany()
                        .HasForeignKey("ChecklistID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("astorWorkDAO.UserMaster", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedByID");

                    b.HasOne("astorWorkDAO.JobSchedule", "JobSchedule")
                        .WithMany()
                        .HasForeignKey("JobScheduleID");

                    b.HasOne("astorWorkDAO.MaterialStageAudit", "MaterialStageAudit")
                        .WithMany()
                        .HasForeignKey("MaterialStageAuditID");

                    b.HasOne("astorWorkDAO.UserMaster", "RouteTo")
                        .WithMany()
                        .HasForeignKey("RouteToID");
                });

            modelBuilder.Entity("astorWorkDAO.ChecklistItemAssociation", b =>
                {
                    b.HasOne("astorWorkDAO.ChecklistMaster", "Checklist")
                        .WithMany()
                        .HasForeignKey("ChecklistID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("astorWorkDAO.ChecklistItemMaster", "ChecklistItem")
                        .WithMany()
                        .HasForeignKey("ChecklistItemID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("astorWorkDAO.ChecklistItemAudit", b =>
                {
                    b.HasOne("astorWorkDAO.ChecklistAudit", "ChecklistAudit")
                        .WithMany()
                        .HasForeignKey("ChecklistAuditID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("astorWorkDAO.ChecklistItemMaster", "ChecklistItem")
                        .WithMany()
                        .HasForeignKey("ChecklistItemID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("astorWorkDAO.UserMaster", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedByID");
                });

            modelBuilder.Entity("astorWorkDAO.ChecklistMaster", b =>
                {
                    b.HasOne("astorWorkDAO.MaterialStageMaster", "MaterialStage")
                        .WithMany()
                        .HasForeignKey("MaterialStageID");

                    b.HasOne("astorWorkDAO.TradeMaster", "Trade")
                        .WithMany()
                        .HasForeignKey("TradeID");
                });

            modelBuilder.Entity("astorWorkDAO.InventoryAudit", b =>
                {
                    b.HasOne("astorWorkDAO.UserMaster", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedByID");

                    b.HasOne("astorWorkDAO.OrganisationMaster", "Organisation")
                        .WithMany()
                        .HasForeignKey("OrganisationID");

                    b.HasOne("astorWorkDAO.ProjectMaster", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectID");

                    b.HasOne("astorWorkDAO.TrackerMaster", "Tracker")
                        .WithMany()
                        .HasForeignKey("TrackerID");
                });

            modelBuilder.Entity("astorWorkDAO.JobAudit", b =>
                {
                    b.HasOne("astorWorkDAO.UserMaster", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedByID");

                    b.HasOne("astorWorkDAO.JobSchedule", "JobSchedule")
                        .WithMany()
                        .HasForeignKey("JobScheduleID");
                });

            modelBuilder.Entity("astorWorkDAO.JobSchedule", b =>
                {
                    b.HasOne("astorWorkDAO.MaterialMaster", "Material")
                        .WithMany()
                        .HasForeignKey("MaterialID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("astorWorkDAO.OrganisationMaster", "Subcon")
                        .WithMany()
                        .HasForeignKey("SubconID");

                    b.HasOne("astorWorkDAO.TradeMaster", "Trade")
                        .WithMany()
                        .HasForeignKey("TradeID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("astorWorkDAO.LocationMaster", b =>
                {
                    b.HasOne("astorWorkDAO.OrganisationMaster", "Organisation")
                        .WithMany()
                        .HasForeignKey("OrganisationID");

                    b.HasOne("astorWorkDAO.SiteMaster", "Site")
                        .WithMany("Locations")
                        .HasForeignKey("SiteID");
                });

            modelBuilder.Entity("astorWorkDAO.MRFMaster", b =>
                {
                    b.HasOne("astorWorkDAO.UserMaster", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedByID");

                    b.HasOne("astorWorkDAO.UserMaster", "UpdatedBy")
                        .WithMany()
                        .HasForeignKey("UpdatedByID");
                });

            modelBuilder.Entity("astorWorkDAO.MaterialDrawingAssociation", b =>
                {
                    b.HasOne("astorWorkDAO.MaterialDrawingAudit", "Drawing")
                        .WithMany()
                        .HasForeignKey("DrawingID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("astorWorkDAO.MaterialMaster", "Material")
                        .WithMany("DrawingAssociations")
                        .HasForeignKey("MaterialID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("astorWorkDAO.MaterialInfoAudit", b =>
                {
                    b.HasOne("astorWorkDAO.UserMaster", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedByID");

                    b.HasOne("astorWorkDAO.MaterialMaster", "Material")
                        .WithMany("MaterialInfoAudits")
                        .HasForeignKey("MaterialID");

                    b.HasOne("astorWorkDAO.UserMaster", "UpdatedBy")
                        .WithMany()
                        .HasForeignKey("UpdatedByID");
                });

            modelBuilder.Entity("astorWorkDAO.MaterialMaster", b =>
                {
                    b.HasOne("astorWorkDAO.MRFMaster", "MRF")
                        .WithMany("Materials")
                        .HasForeignKey("MRFID");

                    b.HasOne("astorWorkDAO.MaterialTypeMaster", "MaterialType")
                        .WithMany()
                        .HasForeignKey("MaterialTypeID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("astorWorkDAO.OrganisationMaster", "Organisation")
                        .WithMany()
                        .HasForeignKey("OrganisationID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("astorWorkDAO.ProjectMaster", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("astorWorkDAO.MaterialQCCase", b =>
                {
                    b.HasOne("astorWorkDAO.UserMaster", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("astorWorkDAO.MaterialMaster", "MaterialMaster")
                        .WithMany("QCCases")
                        .HasForeignKey("MaterialMasterId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("astorWorkDAO.UserMaster", "UpdatedBy")
                        .WithMany()
                        .HasForeignKey("UpdatedById");
                });

            modelBuilder.Entity("astorWorkDAO.MaterialQCDefect", b =>
                {
                    b.HasOne("astorWorkDAO.UserMaster", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedByID");

                    b.HasOne("astorWorkDAO.OrganisationMaster", "Organisation")
                        .WithMany()
                        .HasForeignKey("OrganisationID");

                    b.HasOne("astorWorkDAO.MaterialQCCase", "QCCase")
                        .WithMany("Defects")
                        .HasForeignKey("QCCaseID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("astorWorkDAO.UserMaster", "UpdatedBy")
                        .WithMany()
                        .HasForeignKey("UpdatedByID");
                });

            modelBuilder.Entity("astorWorkDAO.MaterialQCPhotos", b =>
                {
                    b.HasOne("astorWorkDAO.UserMaster", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("astorWorkDAO.MaterialQCDefect")
                        .WithMany("Photos")
                        .HasForeignKey("MaterialQCDefectID");
                });

            modelBuilder.Entity("astorWorkDAO.MaterialStageAudit", b =>
                {
                    b.HasOne("astorWorkDAO.UserMaster", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedByID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("astorWorkDAO.LocationMaster", "Location")
                        .WithMany()
                        .HasForeignKey("LocationID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("astorWorkDAO.MaterialMaster", "MaterialMaster")
                        .WithMany("StageAudits")
                        .HasForeignKey("MaterialMasterID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("astorWorkDAO.MaterialStageMaster", "Stage")
                        .WithMany()
                        .HasForeignKey("StageID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("astorWorkDAO.ModuleMaster", b =>
                {
                    b.HasOne("astorWorkDAO.ModuleMaster", "ParentModule")
                        .WithMany()
                        .HasForeignKey("ParentModuleID");
                });

            modelBuilder.Entity("astorWorkDAO.NotificationAudit", b =>
                {
                    b.HasOne("astorWorkDAO.NotificationTimerMaster", "NotificationTimer")
                        .WithMany()
                        .HasForeignKey("NotificationTimerID");
                });

            modelBuilder.Entity("astorWorkDAO.NotificationTimerMaster", b =>
                {
                    b.HasOne("astorWorkDAO.ProjectMaster", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectID");

                    b.HasOne("astorWorkDAO.SiteMaster", "Site")
                        .WithMany()
                        .HasForeignKey("SiteID");
                });

            modelBuilder.Entity("astorWorkDAO.PageMaster", b =>
                {
                    b.HasOne("astorWorkDAO.ModuleMaster", "Module")
                        .WithMany("Pages")
                        .HasForeignKey("ModuleMasterID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("astorWorkDAO.RoleMaster", b =>
                {
                    b.HasOne("astorWorkDAO.PageMaster", "DefaultPage")
                        .WithMany()
                        .HasForeignKey("DefaultPageID");
                });

            modelBuilder.Entity("astorWorkDAO.RolePageAssociation", b =>
                {
                    b.HasOne("astorWorkDAO.PageMaster", "Page")
                        .WithMany()
                        .HasForeignKey("PageId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("astorWorkDAO.RoleMaster", "Role")
                        .WithMany("RolePageAssociations")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("astorWorkDAO.RolePowerBIReport", b =>
                {
                    b.HasOne("astorWorkDAO.RoleMaster", "Role")
                        .WithMany("PowerBIReports")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("astorWorkDAO.SiteMaster", b =>
                {
                    b.HasOne("astorWorkDAO.OrganisationMaster", "Organisation")
                        .WithMany()
                        .HasForeignKey("OrganisationID");
                });

            modelBuilder.Entity("astorWorkDAO.TrackerMaster", b =>
                {
                    b.HasOne("astorWorkDAO.MaterialMaster", "Material")
                        .WithMany("Trackers")
                        .HasForeignKey("MaterialID");
                });

            modelBuilder.Entity("astorWorkDAO.TradeMaterialTypeAssociation", b =>
                {
                    b.HasOne("astorWorkDAO.MaterialTypeMaster", "MaterialType")
                        .WithMany()
                        .HasForeignKey("MaterialTypeID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("astorWorkDAO.TradeMaster", "Trade")
                        .WithMany()
                        .HasForeignKey("TradeID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("astorWorkDAO.UserMRFAssociation", b =>
                {
                    b.HasOne("astorWorkDAO.MRFMaster", "MRF")
                        .WithMany("UserMRFAssociations")
                        .HasForeignKey("MRFID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("astorWorkDAO.UserMaster", "User")
                        .WithMany("UserMRFAssociations")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("astorWorkDAO.UserMaster", b =>
                {
                    b.HasOne("astorWorkDAO.OrganisationMaster", "Organisation")
                        .WithMany()
                        .HasForeignKey("OrganisationID");

                    b.HasOne("astorWorkDAO.ProjectMaster", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectID");

                    b.HasOne("astorWorkDAO.RoleMaster", "Role")
                        .WithMany()
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("astorWorkDAO.SiteMaster", "Site")
                        .WithMany()
                        .HasForeignKey("SiteID");
                });

            modelBuilder.Entity("astorWorkDAO.UserNotificationAssociation", b =>
                {
                    b.HasOne("astorWorkDAO.NotificationAudit", "Notification")
                        .WithMany("UserNotificationAssociation")
                        .HasForeignKey("NotificationID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("astorWorkDAO.UserMaster", "Receipient")
                        .WithMany("UserNotificationAssociation")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("astorWorkDAO.UserRequestAudit", b =>
                {
                    b.HasOne("astorWorkDAO.UserMaster", "User")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("astorWorkDAO.UserSessionAudit", b =>
                {
                    b.HasOne("astorWorkDAO.UserMaster")
                        .WithMany("UserSessionAudits")
                        .HasForeignKey("UserMasterID");
                });
#pragma warning restore 612, 618
        }
    }
}
