//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace astorWorkDAO
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class astorWorkEntities : DbContext
    {
        public astorWorkEntities()
            : base("name=astorWorkEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<UserMaster> UserMasters { get; set; }
        public virtual DbSet<ZoneMaster> ZoneMasters { get; set; }
        public virtual DbSet<TimeZoneMaster> TimeZoneMasters { get; set; }
        public virtual DbSet<YardMaster> YardMasters { get; set; }
        public virtual DbSet<YardMapping> YardMappings { get; set; }
        public virtual DbSet<ZoneMapping> ZoneMappings { get; set; }
        public virtual DbSet<ConfigurationMaster> ConfigurationMasters { get; set; }
    
        public virtual ObjectResult<usp_GET_YardSummaryInfo_Result> usp_GET_YardSummaryInfo(Nullable<int> yardID)
        {
            var yardIDParameter = yardID.HasValue ?
                new ObjectParameter("YardID", yardID) :
                new ObjectParameter("YardID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GET_YardSummaryInfo_Result>("usp_GET_YardSummaryInfo", yardIDParameter);
        }
    
        public virtual int usp_INS_Zone(string zoneDescription, string zoneCoordinates, string zoneName, string zoneColor, string createdBy)
        {
            var zoneDescriptionParameter = zoneDescription != null ?
                new ObjectParameter("ZoneDescription", zoneDescription) :
                new ObjectParameter("ZoneDescription", typeof(string));
    
            var zoneCoordinatesParameter = zoneCoordinates != null ?
                new ObjectParameter("ZoneCoordinates", zoneCoordinates) :
                new ObjectParameter("ZoneCoordinates", typeof(string));
    
            var zoneNameParameter = zoneName != null ?
                new ObjectParameter("ZoneName", zoneName) :
                new ObjectParameter("ZoneName", typeof(string));
    
            var zoneColorParameter = zoneColor != null ?
                new ObjectParameter("ZoneColor", zoneColor) :
                new ObjectParameter("ZoneColor", typeof(string));
    
            var createdByParameter = createdBy != null ?
                new ObjectParameter("CreatedBy", createdBy) :
                new ObjectParameter("CreatedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_INS_Zone", zoneDescriptionParameter, zoneCoordinatesParameter, zoneNameParameter, zoneColorParameter, createdByParameter);
        }
    
        public virtual ObjectResult<usp_SEL_ZoneMaster_Result> usp_SEL_ZoneMaster(Nullable<int> zoneID)
        {
            var zoneIDParameter = zoneID.HasValue ?
                new ObjectParameter("ZoneID", zoneID) :
                new ObjectParameter("ZoneID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SEL_ZoneMaster_Result>("usp_SEL_ZoneMaster", zoneIDParameter);
        }
    
        public virtual int usp_UPD_Zone(Nullable<int> zoneID, string zoneDescription, string zoneCoordinates, string zoneName, string zoneColor, string modifiedBy, byte[] zoneLayOut)
        {
            var zoneIDParameter = zoneID.HasValue ?
                new ObjectParameter("ZoneID", zoneID) :
                new ObjectParameter("ZoneID", typeof(int));
    
            var zoneDescriptionParameter = zoneDescription != null ?
                new ObjectParameter("ZoneDescription", zoneDescription) :
                new ObjectParameter("ZoneDescription", typeof(string));
    
            var zoneCoordinatesParameter = zoneCoordinates != null ?
                new ObjectParameter("ZoneCoordinates", zoneCoordinates) :
                new ObjectParameter("ZoneCoordinates", typeof(string));
    
            var zoneNameParameter = zoneName != null ?
                new ObjectParameter("ZoneName", zoneName) :
                new ObjectParameter("ZoneName", typeof(string));
    
            var zoneColorParameter = zoneColor != null ?
                new ObjectParameter("ZoneColor", zoneColor) :
                new ObjectParameter("ZoneColor", typeof(string));
    
            var modifiedByParameter = modifiedBy != null ?
                new ObjectParameter("ModifiedBy", modifiedBy) :
                new ObjectParameter("ModifiedBy", typeof(string));
    
            var zoneLayOutParameter = zoneLayOut != null ?
                new ObjectParameter("ZoneLayOut", zoneLayOut) :
                new ObjectParameter("ZoneLayOut", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UPD_Zone", zoneIDParameter, zoneDescriptionParameter, zoneCoordinatesParameter, zoneNameParameter, zoneColorParameter, modifiedByParameter, zoneLayOutParameter);
        }
    
        public virtual ObjectResult<usp_GET_AstorSafeYardSummary_Result> usp_GET_AstorSafeYardSummary(Nullable<int> yardID)
        {
            var yardIDParameter = yardID.HasValue ?
                new ObjectParameter("YardID", yardID) :
                new ObjectParameter("YardID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GET_AstorSafeYardSummary_Result>("usp_GET_AstorSafeYardSummary", yardIDParameter);
        }
    }
}
